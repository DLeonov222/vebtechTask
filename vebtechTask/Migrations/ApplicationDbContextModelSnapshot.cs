// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using vebtechTask.Data;

#nullable disable

namespace vebtechTask.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("vebtechTask.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin",
                            Password = "$2a$11$/tVGI5RBBvPU7U3f12JJsOegDLl/6D6P2YfhXjlzaxFcFGrHkUFF."
                        });
                });

            modelBuilder.Entity("vebtechTask.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "User",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Admin",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Support",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "User",
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = "Admin",
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "User",
                            UserId = 3
                        },
                        new
                        {
                            Id = 7,
                            Name = "SuperAdmin",
                            UserId = 3
                        },
                        new
                        {
                            Id = 10,
                            Name = "User",
                            UserId = 4
                        },
                        new
                        {
                            Id = 12,
                            Name = "Support",
                            UserId = 5
                        },
                        new
                        {
                            Id = 13,
                            Name = "Admin",
                            UserId = 5
                        },
                        new
                        {
                            Id = 16,
                            Name = "User",
                            UserId = 6
                        },
                        new
                        {
                            Id = 17,
                            Name = "Support",
                            UserId = 6
                        });
                });

            modelBuilder.Entity("vebtechTask.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 25,
                            Email = "user1@example.com",
                            Name = "User 1"
                        },
                        new
                        {
                            Id = 2,
                            Age = 30,
                            Email = "user2@example.com",
                            Name = "User 2"
                        },
                        new
                        {
                            Id = 3,
                            Age = 35,
                            Email = "user3@example.com",
                            Name = "User 3"
                        },
                        new
                        {
                            Id = 4,
                            Age = 40,
                            Email = "user4@example.com",
                            Name = "User 4"
                        },
                        new
                        {
                            Id = 5,
                            Age = 45,
                            Email = "user5@example.com",
                            Name = "User 5"
                        },
                        new
                        {
                            Id = 6,
                            Age = 50,
                            Email = "user6@example.com",
                            Name = "User 6"
                        });
                });

            modelBuilder.Entity("vebtechTask.Models.Role", b =>
                {
                    b.HasOne("vebtechTask.Models.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("vebtechTask.Models.User", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
